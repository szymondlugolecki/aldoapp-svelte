generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  customer
  moderator
  admin
}

model User {
  id                String             @id @default(uuid())
  email             String             @unique
  fullName          String
  role              Role               @default(customer)
  banned            Boolean            @default(false)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  verificationToken VerificationToken?
  orders            Order[]

  @@unique([id, email])
}

model VerificationToken {
  id                String   @id @default(uuid())
  verificationToken String   @default(uuid())
  code              String   @unique @db.Char(4)
  // device     String
  expires           DateTime
  user              User     @relation(fields: [email], references: [email])
  email             String   @unique

  @@unique([verificationToken, code, email])
  @@index([email])
}

model Order {
  id        String   @id @default(uuid())
  products  Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [email], references: [email])
  email     String

  @@unique([id])
  @@index([email])
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  thumbnail   String
  images      String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
